<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Reus&#39;s Blog</title>
  
  <subtitle>Code</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-07T07:36:52.031Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>pzh.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CMU课程-Storage I(存储 I)</title>
    <link href="http://example.com/2022/06/07/CMU%E8%AF%BE%E7%A8%8B-Storage-I-%E5%AD%98%E5%82%A8-I/"/>
    <id>http://example.com/2022/06/07/CMU%E8%AF%BE%E7%A8%8B-Storage-I-%E5%AD%98%E5%82%A8-I/</id>
    <published>2022-06-07T07:27:59.000Z</published>
    <updated>2022-06-07T07:36:52.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><ol><li><p>非易失性存储</p><ul><li>随机存取</li><li>字节编址</li></ul></li><li><p>易失性存储</p><ul><li>顺序存储</li><li>按照块编址，读的时候必须整个块读进去然后进行解析，修改某一个字节的内容然后重新将整个块写进去。</li></ul></li></ol><p><img src="/2022/06/07/CMU%E8%AF%BE%E7%A8%8B-Storage-I-%E5%AD%98%E5%82%A8-I/Untitled.png" alt="Untitled"></p><p>在本门课程中，内存代指DRAM，磁盘只带SSD，HDD或者网络存储。</p><h2 id="随机存取-V-S-随机存取"><a href="#随机存取-V-S-随机存取" class="headerlink" title="随机存取 V.S 随机存取"></a>随机存取 V.S 随机存取</h2><p>DBMS希望最大化顺序存取。</p><ul><li>算法尝试减少对随机页的写入次数，以便于数据可以存储在连续的块中</li></ul><h2 id="Disk-oriented-DBMS-（面向硬盘的数据库管理系统）"><a href="#Disk-oriented-DBMS-（面向硬盘的数据库管理系统）" class="headerlink" title="Disk-oriented DBMS （面向硬盘的数据库管理系统）"></a>Disk-oriented DBMS （面向硬盘的数据库管理系统）</h2><p>大部分的数据库都是面向硬盘的数据库，对于面向内存的数据库：速度非常快，但是容易丢失，比如Redis。</p><p><img src="/2022/06/07/CMU%E8%AF%BE%E7%A8%8B-Storage-I-%E5%AD%98%E5%82%A8-I/Untitled%201.png" alt="上图是面向磁盘的DBMS示意图，数据被组织成页或者块（Page），第一页是目录页，储存在Disk中，这里假设内存是空的，为了对数据进行操作，首先需要将数据读取到内存中，通过Buffer pool来限定内存的大小，同时数据库会通过一个执行引擎（Execution Engine）来进行查询，执行引擎向数据库发送请求特定的Page，内存从Disk中先读取Directory，然后通过Directory找到对应的Page，再从Disk中读取相应的Page放入内存中。"></p><p>上图是面向磁盘的DBMS示意图，数据被组织成页或者块（Page），第一页是目录页，储存在Disk中，这里假设内存是空的，为了对数据进行操作，首先需要将数据读取到内存中，通过Buffer pool来限定内存的大小，同时数据库会通过一个执行引擎（Execution Engine）来进行查询，执行引擎向数据库发送请求特定的Page，内存从Disk中先读取Directory，然后通过Directory找到对应的Page，再从Disk中读取相应的Page放入内存中。</p><blockquote><p>虚拟内存</p><p>为什么数据库需要自己管理内存而不是让操作系统来帮忙呢？</p><pre><code>   实现虚拟内存的一种方法是使用mmap()，通过这种方法可以将文件的内容映射到进程的地址空间，进程在地址空间上读取，操作系统负责在磁盘和内存之间来回移动页面。如果mmap遇到page fault，那么进程会被阻塞。  mmap的另一个问题在于，对于只读的文件是友好的，但是当存在多个写者时，就变得相当复杂。存在一些方法可以解决这些问题。总的来说就是告诉OS，虚拟内存中有哪些可以卸载了，哪些不能卸载。</code></pre></blockquote><p>总的来说，我们希望数据库能够自己管理自己的内容。</p><ul><li>使用正确的顺序将脏页写回</li><li>预先取出磁盘的数据</li><li>缓冲池的替换策略</li><li>线程&#x2F;进程安排</li></ul><aside>💡 OS is not your friend ！</aside><h2 id="Database-storage-数据库存储"><a href="#Database-storage-数据库存储" class="headerlink" title="Database storage(数据库存储)"></a>Database storage(数据库存储)</h2><p><strong>两大关键问题</strong></p><ol><li><p>数据库中的数据在磁盘上是怎么表现的（静态的表现）</p><ul><li><p>File storage（文件存储）</p><pre><code>   DBMS将一个数据库作为一个或者多个文件存储在磁盘上，通常在一个专有的格式中。OS并不知道文件的具体内容。</code></pre><ul><li>Storge Manager<ol><li><p>Storge Manager负责维护数据库的文件。</p><p> → 一些存储管理器能够自己调度读写操作，以改善页面的时空局部性。</p></li><li><p>将文件组织成页面的集合。</p></li></ol></li></ul></li></ul><hr><ul><li><p>Page layout（页面布局）</p><p>  Page是一个固定大小的数据块。</p><p>  每个页有固定的ID</p><p>  有不同的解释</p></li></ul><hr><ul><li>Tuple layout（元组布局）</li></ul></li><li><p>如何管理数据从磁盘与内存之间的进出（动态的调度）</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;存储&quot;&gt;&lt;a href=&quot;#存储&quot; class=&quot;headerlink&quot; title=&quot;存储&quot;&gt;&lt;/a&gt;存储&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="http://example.com/2022/06/07/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/06/07/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2022-06-07T01:23:19.000Z</published>
    <updated>2022-06-07T02:22:16.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown标题语法"><a href="#Markdown标题语法" class="headerlink" title="Markdown标题语法"></a>Markdown标题语法</h1><ul><li><p>一级标题： # heading level1</p></li><li><p>二级标题： ## heading level2</p><p>以此类推</p></li></ul><h1 id="Markdown段落语法"><a href="#Markdown段落语法" class="headerlink" title="Markdown段落语法"></a>Markdown段落语法</h1><p>要创建段落，使用空白行将一行或者多行文本进行分隔。</p><h1 id="Markdown换行语法"><a href="#Markdown换行语法" class="headerlink" title="Markdown换行语法"></a>Markdown换行语法</h1><p>在一行的末尾添加两个或者多个空格，然后按回车键即可创建一个换行。</p><p><img src="/2022/06/07/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/1.png" alt="1"></p><h1 id="Markdown强调语法"><a href="#Markdown强调语法" class="headerlink" title="Markdown强调语法"></a>Markdown强调语法</h1><h2 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h2><p>前后各加两个星号**</p><h2 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h2><p>用来斜体显示文本，在文本后添加一个星号*</p><h2 id="组合：Bold和Italic混合"><a href="#组合：Bold和Italic混合" class="headerlink" title="组合：Bold和Italic混合"></a>组合：Bold和Italic混合</h2><p>前后各三个***</p><h1 id="Markdown引用语法"><a href="#Markdown引用语法" class="headerlink" title="Markdown引用语法"></a>Markdown引用语法</h1><p>创建块引用，在段落前添加一个 &gt;</p><h1 id="Markdown列表语法"><a href="#Markdown列表语法" class="headerlink" title="Markdown列表语法"></a>Markdown列表语法</h1><p>可以将多个条目组织成有序或者无序列表</p><ul><li>有序列表</li></ul><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。</p><ol><li>a</li></ol><ul><li>无序列表</li></ul><p>要创建无序列表，请在每个列表项前面添加破折号、星号、或者加号。</p><ul><li>first<ul><li>啊</li></ul></li></ul><h1 id="Markdown代码语法"><a href="#Markdown代码语法" class="headerlink" title="Markdown代码语法"></a>Markdown代码语法</h1><p>要将单词或短语表示为代码，将其包裹在反引号中（&#96;&#96;）</p><h3 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h3><p>将代码的单词或者短语中包含一个或者多个反引号，可以通过将单词或者短语包裹在双反引号中。</p><p>反引号：tab键上面的键</p><h1 id="Markdown分割线语法"><a href="#Markdown分割线语法" class="headerlink" title="Markdown分割线语法"></a>Markdown分割线语法</h1><p>要创建分割线，请在单独一行使用多个破折号。</p><p><img src="/2022/06/07/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/2.png" alt="2"></p><h1 id="Markdown链接语法"><a href="#Markdown链接语法" class="headerlink" title="Markdown链接语法"></a>Markdown链接语法</h1><p><a href="%5Bhttps://markdown.com.cn%5D(https://markdown.com.cn)">超链接显示名</a></p><ul><li>可以使用尖括号将URL或者email地址变成可点击的</li><li>强调链接，在链接语法前后加*</li><li>将链接表示为代码，在方括号中添加反引号</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown标题语法&quot;&gt;&lt;a href=&quot;#Markdown标题语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown标题语法&quot;&gt;&lt;/a&gt;Markdown标题语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一级标题： # heading level</summary>
      
    
    
    
    
    <category term="学习记录" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/06/06/hello-world/"/>
    <id>http://example.com/2022/06/06/hello-world/</id>
    <published>2022-06-06T03:33:19.337Z</published>
    <updated>2022-06-06T03:33:19.337Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new &quot;My New Post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
